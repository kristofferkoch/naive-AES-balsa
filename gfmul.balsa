(--
    This file is part of naive-AES-balsa.

    naive-AES-balsa is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    naive-AES-balsa is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with naive-AES-balsa.  If not, see <http://www.gnu.org/licenses/>.
--)

import [balsa.types.basic]

import [gfdouble]

procedure gfmul8_2 (input inp : byte; output o : byte) is
begin
   gfdouble(inp, o)
end

procedure gfmul8_3 (input inp : byte; output o : byte) is
   channel imm : byte
begin
   inp -> then 
      gfdouble(<- inp, imm) || 
      imm -> then
         o <- imm xor inp
      end
   end
end

(--procedure gfmul (input inp : operands;
 	  	 output o : array 8 of bit) is
variable a, a_next, b, b_next, p, p_next : array 8 of bit
variable i, i_next : 3 bits
begin
   loop
      inp -> then
      	a := inp.a || b := inp.b
      end ||
      p := (0 as array 8 of bit) || i := 0;
      loop
         i_next := (i + 1 as 3 bits) ||
	 if b[0] = 1 then
	    --print "b[0] high";
	    p_next := #((p as byte) xor (a as byte))
	 else
	    p_next := p
	 end ||
	 b_next := b[1..7] @ {0} ||
	 a_next := {0} @ a[0..6];
	 --print "a_next: ",a_next, " ", (a_next as byte); 
	 --print "b_next: ",b_next, " ", (b_next as byte);
	 if a[7] = 1 then
	    --print "high bit";
	    a := #((a_next as byte) xor 0x1b)
	 else
	    a := a_next
	 end ||
	 i := i_next || p := p_next || b := b_next
	 while i /= 0
      end ;
      o <- p
   end
end--)
(-- procedure gfmul (input i : operands;
 	  	 output o : array 8 of bit) is
begin
   loop
      select i then
      	o <- {
	   i.b[0] and i.a[0] xor i.b[1] and i.a[7] xor i.b[2] and i.a[6] xor i.b[3] and i.a[5] xor i.b[4] and i.a[4] xor i.b[5] and i.a[3] xor i.b[5] and i.a[7] xor i.b[6] and i.a[2] xor i.b[6] and i.a[6] xor i.b[6] and i.a[7] xor i.b[7] and i.a[1] xor i.b[7] and i.a[5] xor i.b[7] and i.a[6] xor i.b[7] and i.a[7],
	   i.b[0] and i.a[1] xor i.b[1] and i.a[0] xor i.b[2] and i.a[7] xor i.b[3] and i.a[6] xor i.b[4] and i.a[5] xor i.b[5] and i.a[4] xor i.b[6] and i.a[3] xor i.b[6] and i.a[7] xor i.b[7] and i.a[2] xor i.b[7] and i.a[6] xor i.b[7] and i.a[7],
	   i.b[0] and i.a[2] xor i.b[1] and i.a[1] xor i.b[1] and i.a[7] xor i.b[2] and i.a[0] xor i.b[2] and i.a[6] xor i.b[3] and i.a[5] xor i.b[3] and i.a[7] xor i.b[4] and i.a[4] xor i.b[4] and i.a[6] xor i.b[5] and i.a[3] xor i.b[5] and i.a[5] xor i.b[5] and i.a[7] xor i.b[6] and i.a[2] xor i.b[6] and i.a[4] xor i.b[6] and i.a[6] xor i.b[6] and i.a[7] xor i.b[7] and i.a[1] xor i.b[7] and i.a[3] xor i.b[7] and i.a[5] xor i.b[7] and i.a[6],
	   i.b[0] and i.a[3] xor i.b[1] and i.a[2] xor i.b[1] and i.a[7] xor i.b[2] and i.a[1] xor i.b[2] and i.a[6] xor i.b[2] and i.a[7] xor i.b[3] and i.a[0] xor i.b[3] and i.a[5] xor i.b[3] and i.a[6] xor i.b[4] and i.a[4] xor i.b[4] and i.a[5] xor i.b[4] and i.a[7] xor i.b[5] and i.a[3] xor i.b[5] and i.a[4] xor i.b[5] and i.a[6] xor i.b[5] and i.a[7] xor i.b[6] and i.a[2] xor i.b[6] and i.a[3] xor i.b[6] and i.a[5] xor i.b[6] and i.a[6] xor i.b[7] and i.a[1] xor i.b[7] and i.a[2] xor i.b[7] and i.a[4] xor i.b[7] and i.a[5],
	   i.b[0] and i.a[4] xor i.b[1] and i.a[3] xor i.b[1] and i.a[7] xor i.b[2] and i.a[2] xor i.b[2] and i.a[6] xor i.b[2] and i.a[7] xor i.b[3] and i.a[1] xor i.b[3] and i.a[5] xor i.b[3] and i.a[6] xor i.b[3] and i.a[7] xor i.b[4] and i.a[0] xor i.b[4] and i.a[4] xor i.b[4] and i.a[5] xor i.b[4] and i.a[6] xor i.b[5] and i.a[3] xor i.b[5] and i.a[4] xor i.b[5] and i.a[5] xor i.b[6] and i.a[2] xor i.b[6] and i.a[3] xor i.b[6] and i.a[4] xor i.b[7] and i.a[1] xor i.b[7] and i.a[2] xor i.b[7] and i.a[3] xor i.b[7] and i.a[7],
	   i.b[0] and i.a[5] xor i.b[1] and i.a[4] xor i.b[2] and i.a[3] xor i.b[2] and i.a[7] xor i.b[3] and i.a[2] xor i.b[3] and i.a[6] xor i.b[3] and i.a[7] xor i.b[4] and i.a[1] xor i.b[4] and i.a[5] xor i.b[4] and i.a[6] xor i.b[4] and i.a[7] xor i.b[5] and i.a[0] xor i.b[5] and i.a[4] xor i.b[5] and i.a[5] xor i.b[5] and i.a[6] xor i.b[6] and i.a[3] xor i.b[6] and i.a[4] xor i.b[6] and i.a[5] xor i.b[7] and i.a[2] xor i.b[7] and i.a[3] xor i.b[7] and i.a[4],
	   i.b[0] and i.a[6] xor i.b[1] and i.a[5] xor i.b[2] and i.a[4] xor i.b[3] and i.a[3] xor i.b[3] and i.a[7] xor i.b[4] and i.a[2] xor i.b[4] and i.a[6] xor i.b[4] and i.a[7] xor i.b[5] and i.a[1] xor i.b[5] and i.a[5] xor i.b[5] and i.a[6] xor i.b[5] and i.a[7] xor i.b[6] and i.a[0] xor i.b[6] and i.a[4] xor i.b[6] and i.a[5] xor i.b[6] and i.a[6] xor i.b[7] and i.a[3] xor i.b[7] and i.a[4] xor i.b[7] and i.a[5],
	   i.b[0] and i.a[7] xor i.b[1] and i.a[6] xor i.b[2] and i.a[5] xor i.b[3] and i.a[4] xor i.b[4] and i.a[3] xor i.b[4] and i.a[7] xor i.b[5] and i.a[2] xor i.b[5] and i.a[6] xor i.b[5] and i.a[7] xor i.b[6] and i.a[1] xor i.b[6] and i.a[5] xor i.b[6] and i.a[6] xor i.b[6] and i.a[7] xor i.b[7] and i.a[0] xor i.b[7] and i.a[4] xor i.b[7] and i.a[5] xor i.b[7] and i.a[6]
	}
      end
   end
end
--)
